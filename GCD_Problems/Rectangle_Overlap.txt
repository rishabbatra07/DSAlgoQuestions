/*Given eight integers A, B, C, D, E, F, G and H which represent two rectangles in a 2D plane. For the first rectangle it's bottom left corner is (A, B) and top right corner is (C, D) and for the second rectangle it's bottom left corner is (E, F) and top right corner is (G, H). Find and return whether the two rectangles overlap or not.
The eight arguments given are the integers A, B, C, D, E, F, G and H.


Output Format
Return 1 if the two rectangles overlap else return 0.


Example Input
Input 1: A = 0 B = 0 C = 4 D = 4 E = 2 F = 2 G = 6 H = 6 Input 2:
A = 0   B = 0
C = 4   D = 4
E = 2   F = 2
G = 3   H = 3


Example Output
Ouput 1:
1*/


public class Solution {
    public int solve(int A, int B, int C, int D, int E, int F, int G, int H) {
        
        if((Math.min(C,G)- Math.max(A,E)) >0 && (Math.min(D,H)-Math.max(B,F)>0)) return 1; 
    //    else if() return 1; 
        return 0;
    }
}



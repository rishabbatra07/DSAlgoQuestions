/*Q3)
Given an integer array A of size N.
Find the minimum number of elements that need to be removed such that the GCD of the resulting array becomes 1.

If not possible then return -1.
A = [7, 2, 5]
GCD of the array A is 1.
so, the number of elements to be removed is 0.
*/


public class Solution {
    public int gcd(int A, int B) {
            if(A<B) return gcd(B,A);
            else if(B==1) return 1;
            else if (A==0 || B==0) return Math.max(A,B);
            else return gcd(B,A%B);
    }
    
    public int solve(ArrayList<Integer> A) {
    int[] g1=new int[A.size()];
    g1[0]=A.get(0);
    for(int i=1;i<A.size();i++){
        g1[i]=gcd(g1[i-1],A.get(i));
    }
        if(g1[A.size()-1]==1) return 0;
        else return -1;
    }
}
